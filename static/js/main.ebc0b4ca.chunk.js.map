{"version":3,"sources":["Game.js","index.js"],"names":["calculateWinner","history","lines","i","length","a","b","c","d","e","j","k","Board","piece","this","props","className","key","onClick","handleClick","rowBoardRow","n","rowBtn","push","renderBtn","Component","Game","state","squares","Array","line","fill","xIsNext","stepNumber","winner","bind","resetGame","backOneStep","currentSquares","slice","setState","concat","backStep","isHasBackStep","status","reset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebc0b4ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Game.css';\r\n\r\n// 棋盤格線設定\r\nconst line = 19;\r\n\r\nfunction calculateWinner(history){\r\n  const lines = [\r\n    [0,1,2,3,4],\r\n    [0,18,36,54,72],\r\n    [0,19,38,57,76],\r\n    [4,21,38,55,72]\r\n  ];\r\n  for(let i=0; i<lines.length; i++){\r\n    const [a,b,c,d,e] = lines[i];\r\n    for(let j=0; j<14; j++){ // 檢查橫向是否 win\r\n      for(let k=0; k<21; k++){ // 檢查縱向是否 win\r\n        if( history[a+j+(k*18)]\r\n          && history[a+j+(k*18)] === history[b+j+(k*18)]\r\n          && history[b+j+(k*18)] === history[c+j+(k*18)]\r\n          && history[c+j+(k*18)] === history[d+j+(k*18)]\r\n          && history[d+j+(k*18)] === history[e+j+(k*18)]\r\n          ){\r\n          return history[a+j+(k*18)];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nclass Board extends Component {\r\n\r\n  renderBtn(i){\r\n    let piece = this.props.history[i] ? this.props.history[i] : '';\r\n    return (\r\n      <div className=\"btn boardLine\" key={i}>\r\n        <div className={`piece ${piece}`} onClick={()=>{this.props.handleClick(i)}}></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render(){\r\n      let rowBoardRow = [];\r\n      let n = 0;\r\n      for(let i=0; i<18; i++){\r\n        let rowBtn = [];\r\n        for(let j=0; j<18; j++,n++){\r\n          rowBtn.push(this.renderBtn(n))\r\n        }\r\n        rowBoardRow.push(<div className=\"boardRow\" key={i}>{rowBtn}</div>)\r\n      }\r\n    return (\r\n      <div className=\"board\">\r\n        {rowBoardRow}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Game extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(line * line).fill(null)\r\n      }],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n      winner: null,\r\n    }\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.resetGame = this.resetGame.bind(this);\r\n    this.backOneStep = this.backOneStep.bind(this);\r\n  }\r\n\r\n  handleClick(i){\r\n    const history = this.state.history;\r\n    const current = history[history.length - 1];\r\n    const currentSquares = current.squares.slice();\r\n    if(calculateWinner(currentSquares) || currentSquares[i]){\r\n      return\r\n    }\r\n    currentSquares[i] = this.state.xIsNext ? 'black' : 'white';\r\n    this.setState({\r\n      history: this.state.history.concat([{\r\n        squares: currentSquares,\r\n      }]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length,\r\n    });\r\n  }\r\n\r\n  resetGame(){\r\n    this.setState({\r\n      history: Array(line * line).fill(null),\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n      winner: null,\r\n    })\r\n  }\r\n\r\n  backOneStep(){\r\n    const history = this.state.history;\r\n    if(history.length<0){\r\n      return\r\n    }\r\n    const backStep = history.slice(0,[history.length - 1]);\r\n    this.setState({\r\n      history: backStep,\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: (history.length-1) - 1,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const currentSquares = this.state.history[this.state.history.length - 1].squares;\r\n    const winner = calculateWinner(currentSquares);\r\n    const isHasBackStep = this.state.stepNumber > 0 ? 'Back Step' : '';\r\n    let status = null;\r\n    let reset = null;\r\n    if(winner){\r\n      status = \"Winner: \"+ winner;\r\n      reset = \"Reset Game\";\r\n    } else {\r\n      status = \"Next Player: \" + (this.state.xIsNext ? \"Black\" : \"White\");\r\n    }\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"title\">GOMOKU</div>\r\n        <div className=\"player\">{status}</div>\r\n        <div className=\"backStep\" onClick={this.backOneStep}>{isHasBackStep}</div>\r\n        <div className=\"resetGame\" onClick={this.resetGame}>{reset}</div>\r\n        <Board history={currentSquares} handleClick={this.handleClick} />\r\n        <br />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Game from './Game';\r\n\r\nReactDOM.render(<Game />, document.getElementById('root'));\r\n"],"sourceRoot":""}